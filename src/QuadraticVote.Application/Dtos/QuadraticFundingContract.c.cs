// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: quadratic_funding_contract.proto
// </auto-generated>
// Original file comments:
// *
// Quadratic Funding Contract.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.QuadraticFunding {

  #region Events
  public partial class ProjectBanned : aelf::IEvent<ProjectBanned>
  {
    public global::System.Collections.Generic.IEnumerable<ProjectBanned> GetIndexed()
    {
      return new List<ProjectBanned>
      {
      };
    }

    public ProjectBanned GetNonIndexed()
    {
      return new ProjectBanned
      {
        Project = Project,
        Ban = Ban,
      };
    }
  }

  public partial class TaxPointChanged : aelf::IEvent<TaxPointChanged>
  {
    public global::System.Collections.Generic.IEnumerable<TaxPointChanged> GetIndexed()
    {
      return new List<TaxPointChanged>
      {
      };
    }

    public TaxPointChanged GetNonIndexed()
    {
      return new TaxPointChanged
      {
        TaxPoint = TaxPoint,
      };
    }
  }

  public partial class RoundIntervalChanged : aelf::IEvent<RoundIntervalChanged>
  {
    public global::System.Collections.Generic.IEnumerable<RoundIntervalChanged> GetIndexed()
    {
      return new List<RoundIntervalChanged>
      {
      };
    }

    public RoundIntervalChanged GetNonIndexed()
    {
      return new RoundIntervalChanged
      {
        Interval = Interval,
      };
    }
  }

  public partial class VotingUnitChanged : aelf::IEvent<VotingUnitChanged>
  {
    public global::System.Collections.Generic.IEnumerable<VotingUnitChanged> GetIndexed()
    {
      return new List<VotingUnitChanged>
      {
      };
    }

    public VotingUnitChanged GetNonIndexed()
    {
      return new VotingUnitChanged
      {
        VotingUnit = VotingUnit,
      };
    }
  }

  public partial class Voted : aelf::IEvent<Voted>
  {
    public global::System.Collections.Generic.IEnumerable<Voted> GetIndexed()
    {
      return new List<Voted>
      {
      };
    }

    public Voted GetNonIndexed()
    {
      return new Voted
      {
        Account = Account,
        Project = Project,
        Vote = Vote,
      };
    }
  }

  public partial class ProjectUploaded : aelf::IEvent<ProjectUploaded>
  {
    public global::System.Collections.Generic.IEnumerable<ProjectUploaded> GetIndexed()
    {
      return new List<ProjectUploaded>
      {
      };
    }

    public ProjectUploaded GetNonIndexed()
    {
      return new ProjectUploaded
      {
        Uploader = Uploader,
        ProjectId = ProjectId,
        Round = Round,
      };
    }
  }

  #endregion
}
#endregion

